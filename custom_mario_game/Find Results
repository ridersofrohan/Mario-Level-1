Searching 61 files for "Sound"

/Users/rohanchalla/Developer/Python/maRLio/data/constants.py:
  164  LEVEL1 = 'level1'
  165
  166: #SOUND STATEZ
  167  NORMAL = 'normal'
  168  STAGE_CLEAR = 'stage clear'

/Users/rohanchalla/Developer/Python/maRLio/data/game_sound.py:
    5  from . import constants as c
    6
    7: class Sound(object):
    8:     """Handles all sound for the game"""
    9      def __init__(self, overhead_info):
   10          """Initialize the class"""
   ..
   30
   31      def update(self, game_info, mario):
   32:         """Updates sound object with game info"""
   33          self.game_info = game_info
   34          self.mario = mario
   ..
   36
   37      def  handle_state(self):
   38:         """Handles the state of the soundn object"""
   39          if self.state == c.NORMAL:
   40              if self.mario.dead:

/Users/rohanchalla/Developer/Python/maRLio/data/setup.py:
   24  MUSIC = tools.load_all_music(os.path.join("resources","music"))
   25  GFX   = tools.load_all_gfx(os.path.join("resources","graphics"))
   26: SFX   = tools.load_all_sfx(os.path.join("resources","sound"))
   27
   28

/Users/rohanchalla/Developer/Python/maRLio/data/tools.py:
  157          name, ext = os.path.splitext(fx)
  158          if ext.lower() in accept:
  159:             effects[name] = pg.mixer.Sound(os.path.join(directory, fx))
  160      return effects
  161

/Users/rohanchalla/Developer/Python/maRLio/data/states/level1.py:
    5  from .. import setup, tools
    6  from .. import constants as c
    7: from .. import game_sound
    8  from .. components import mario
    9  from .. components import collider
   ..
   42          self.moving_score_list = []
   43          self.overhead_info_display = info.OverheadInfo(self.game_info, c.LEVEL, agent=self.agent)
   44:         self.sound_manager = game_sound.Sound(self.overhead_info_display)
   45
   46          self.setup_background()
   ..
  362          self.check_if_time_out()
  363          self.blit_everything(surface)
  364:         self.sound_manager.update(self.game_info, self.mario)
  365
  366
  ...
 1435              self.set_game_info_values()
 1436              self.next = c.GAME_OVER
 1437:             self.sound_manager.stop_music()
 1438              self.done = True
 1439

/Users/rohanchalla/Developer/Python/maRLio/data/states/load_screen.py:
    3  from .. import setup, tools
    4  from .. import constants as c
    5: from .. import game_sound
    6  from ..components import info
    7
    .
   20
   21          self.overhead_info = info.OverheadInfo(self.game_info, info_state)
   22:         self.sound_manager = game_sound.Sound(self.overhead_info)
   23
   24          self.done = True
   ..
   69      def update(self, surface, keys, current_time, action=None):
   70          self.current_time = current_time
   71:         self.sound_manager.update(self.persist, None)
   72
   73          if (self.current_time - self.start_time) < 7000:

18 matches across 6 files
